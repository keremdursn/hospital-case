definitions:
  dto.AddHospitalPolyclinicRequest:
    properties:
      polyclinic_id:
        type: integer
    type: object
  dto.AddStaffRequest:
    properties:
      first_name:
        type: string
      hospital_polyclinic_id:
        type: integer
      job_group_id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      tc:
        type: string
      title_id:
        type: integer
      working_days:
        type: string
    type: object
  dto.AuthorityResponse:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      hospital_id:
        type: integer
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      role:
        type: string
      tc:
        type: string
      updated_at:
        type: string
    type: object
  dto.CityLookup:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.CreateSubUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      tc:
        type: string
    type: object
  dto.DistrictLookup:
    properties:
      city_id:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  dto.ForgotPasswordRequest:
    properties:
      phone:
        type: string
    type: object
  dto.ForgotPasswordResponse:
    properties:
      code:
        type: string
    type: object
  dto.HospitalPolyclinicDetail:
    properties:
      id:
        type: integer
      personnel_groups:
        items:
          $ref: '#/definitions/dto.PolyclinicPersonnelGroup'
        type: array
      polyclinic_name:
        type: string
      total_personnel:
        type: integer
    type: object
  dto.HospitalPolyclinicListResponse:
    properties:
      page:
        type: integer
      polyclinics:
        items:
          $ref: '#/definitions/dto.HospitalPolyclinicDetail'
        type: array
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.HospitalPolyclinicResponse:
    properties:
      id:
        type: integer
      polyclinic_id:
        type: integer
      polyclinic_name:
        type: string
    type: object
  dto.HospitalResponse:
    properties:
      address:
        type: string
      city_id:
        type: integer
      city_name:
        type: string
      district_id:
        type: integer
      district_name:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      tax_number:
        type: string
    type: object
  dto.JobGroupLookup:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.LoginRequest:
    properties:
      credential:
        type: string
      password:
        type: string
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  dto.PolyclinicLookup:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.PolyclinicPersonnelGroup:
    properties:
      count:
        type: integer
      group_name:
        type: string
    type: object
  dto.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  dto.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      address:
        type: string
      authority_email:
        type: string
      authority_fname:
        type: string
      authority_lname:
        type: string
      authority_phone:
        type: string
      authority_tc:
        type: string
      city_id:
        type: integer
      district_id:
        type: integer
      hospital_email:
        type: string
      hospital_name:
        type: string
      hospital_phone:
        type: string
      password:
        type: string
      tax_number:
        type: string
    type: object
  dto.ResetPasswordRequest:
    properties:
      code:
        type: string
      new_password:
        type: string
      phone:
        type: string
      repeat_new_password:
        type: string
    type: object
  dto.StaffListResponse:
    properties:
      page:
        type: integer
      size:
        type: integer
      staff:
        items:
          $ref: '#/definitions/dto.StaffResponse'
        type: array
      total:
        type: integer
    type: object
  dto.StaffResponse:
    properties:
      first_name:
        type: string
      hospital_polyclinic_id:
        type: integer
      id:
        type: integer
      job_group_id:
        type: integer
      job_group_name:
        type: string
      last_name:
        type: string
      phone:
        type: string
      polyclinic_name:
        type: string
      tc:
        type: string
      title_id:
        type: integer
      title_name:
        type: string
      working_days:
        type: string
    type: object
  dto.SubUserResponse:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      role:
        type: string
      tc:
        type: string
    type: object
  dto.TitleLookup:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.UpdateHospitalRequest:
    properties:
      address:
        type: string
      city_id:
        type: integer
      district_id:
        type: integer
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      tax_number:
        type: string
    type: object
  dto.UpdateStaffRequest:
    properties:
      first_name:
        type: string
      hospital_polyclinic_id:
        type: integer
      job_group_id:
        type: integer
      last_name:
        type: string
      phone:
        type: string
      tc:
        type: string
      title_id:
        type: integer
      working_days:
        type: string
    type: object
  dto.UpdateSubUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        description: '"yetkili" veya "calisan"'
        type: string
      tc:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Sends a reset code to the user's phone
      parameters:
      - description: Forgot password info
        in: body
        name: forgot
        required: true
        schema:
          $ref: '#/definitions/dto.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ForgotPasswordResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Şifre sıfırlama kodu gönderir
      tags:
      - Authentication
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: User login with email or phone, returns JWT token
      parameters:
      - description: Login info
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Kullanıcı girişi
      tags:
      - Authentication
  /api/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Geçerli bir refresh token ile yeni access ve refresh token döner
      parameters:
      - description: Refresh token bilgisi
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: JWT yenileme
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Registers a hospital and its first authority
      parameters:
      - description: Register info
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.AuthorityResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Hastane ve ilk yetkili kaydı
      tags:
      - Authentication
  /api/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets the user's password with the code
      parameters:
      - description: Reset password info
        in: body
        name: reset
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Şifreyi sıfırlar
      tags:
      - Authentication
  /api/cities:
    get:
      description: Returns all cities (il)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CityLookup'
            type: array
      summary: Tüm şehirleri listeler
      tags:
      - Location
  /api/districts:
    get:
      description: Returns all districts (ilçe) for a given city
      parameters:
      - description: City ID
        in: query
        name: city_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.DistrictLookup'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Seçili ile ait ilçeleri listeler
      tags:
      - Location
  /api/hospital/me:
    get:
      description: Returns the hospital info of the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HospitalResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Giriş yapan kullanıcının hastane bilgisini getirir
      tags:
      - Hospital
    put:
      consumes:
      - application/json
      description: Updates the hospital info of the authenticated user
      parameters:
      - description: Hospital update info
        in: body
        name: hospital
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateHospitalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HospitalResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Giriş yapan kullanıcının hastane bilgisini günceller
      tags:
      - Hospital
  /api/personnel/job-groups:
    get:
      description: Returns all job groups
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/dto.JobGroupLookup'
            type: array
      summary: Tüm meslek gruplarını listeler
      tags:
      - Personnel
  /api/personnel/staff:
    get:
      description: Lists staff with filters and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      - description: First name
        in: query
        name: first_name
        type: string
      - description: Last name
        in: query
        name: last_name
        type: string
      - description: TC Kimlik No
        in: query
        name: tc
        type: string
      - description: Job Group ID
        in: query
        name: job_group_id
        type: integer
      - description: Title ID
        in: query
        name: title_id
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.StaffListResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Personelleri listeler (filtreli ve sayfalı)
      tags:
      - Personnel
    post:
      consumes:
      - application/json
      description: Adds a new staff member
      parameters:
      - description: Staff info
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/dto.AddStaffRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.StaffResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Personel ekler
      tags:
      - Personnel
  /api/personnel/staff/{id}:
    delete:
      description: Deletes a staff member
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Personel siler
      tags:
      - Personnel
    put:
      consumes:
      - application/json
      description: Updates a staff member
      parameters:
      - description: Staff ID
        in: path
        name: id
        required: true
        type: integer
      - description: Staff info
        in: body
        name: staff
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateStaffRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.StaffResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Personel günceller
      tags:
      - Personnel
  /api/personnel/titles:
    get:
      description: Returns all titles for a given job group
      parameters:
      - description: Job Group ID
        in: query
        name: job_group_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/dto.TitleLookup'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Seçili meslek grubuna ait unvanları listeler
      tags:
      - Personnel
  /api/polyclinic/add:
    post:
      consumes:
      - application/json
      description: Adds a polyclinic to the hospital
      parameters:
      - description: Polyclinic info
        in: body
        name: polyclinic
        required: true
        schema:
          $ref: '#/definitions/dto.AddHospitalPolyclinicRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.HospitalPolyclinicResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Hastaneye poliklinik ekler
      tags:
      - Polyclinic
  /api/polyclinic/all:
    get:
      description: Returns all polyclinics
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PolyclinicLookup'
            type: array
      summary: Tüm poliklinikleri listeler
      tags:
      - Polyclinic
  /api/polyclinic/list:
    get:
      description: Lists hospital's polyclinics with pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HospitalPolyclinicListResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Hastanenin polikliniklerini listeler (sayfalı)
      tags:
      - Polyclinic
  /api/polyclinic/remove/{id}:
    delete:
      description: Removes a polyclinic from the hospital
      parameters:
      - description: Hospital Polyclinic ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Hastaneden poliklinik siler
      tags:
      - Polyclinic
  /api/subuser:
    get:
      description: Lists all subusers for the hospital
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.SubUserResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Alt kullanıcıları listeler
      tags:
      - SubUser
    post:
      consumes:
      - application/json
      description: Adds a new subuser (yetkili/çalışan)
      parameters:
      - description: SubUser info
        in: body
        name: subuser
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSubUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.SubUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Alt kullanıcı ekler
      tags:
      - SubUser
  /api/subuser/{id}:
    delete:
      description: Deletes a subuser
      parameters:
      - description: SubUser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Alt kullanıcıyı siler
      tags:
      - SubUser
    put:
      consumes:
      - application/json
      description: Updates a subuser
      parameters:
      - description: SubUser ID
        in: path
        name: id
        required: true
        type: integer
      - description: SubUser info
        in: body
        name: subuser
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSubUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SubUserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Alt kullanıcıyı günceller
      tags:
      - SubUser
swagger: "2.0"
